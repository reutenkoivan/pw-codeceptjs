"use strict";(self.webpackChunkpw_codeceptjs=self.webpackChunkpw_codeceptjs||[]).push([[475],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,y=d["".concat(p,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5246:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>y,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={title:"@pw-codeceptjs/base-extension",sidebar_label:"Entities"},p=void 0,c={unversionedId:"entities",id:"entities",title:"@pw-codeceptjs/base-extension",description:"BaseExtension",source:"@site/../../../../packages/extensions/base/doc/entities.md",sourceDirName:".",slug:"/entities",permalink:"/pw-codeceptjs/base/entities",tags:[],version:"current",lastUpdatedBy:"Ivan Reutenko",lastUpdatedAt:1677081722,formattedLastUpdatedAt:"2/22/2023",frontMatter:{title:"@pw-codeceptjs/base-extension",sidebar_label:"Entities"},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/pw-codeceptjs/base/"}},l={},d=[{value:"BaseExtension",id:"baseextension",level:2}],u={toc:d},f="wrapper";function y(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(f,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"baseextension"},"BaseExtension"),(0,a.kt)("p",null,"Provide base contract between extension and main playwright fixture."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Browser, BrowserContext, Page } from '@playwright/test'\nimport { Signale } from 'signales'\n\nexport type ExtensionMetaType = {\n  tabID: number\n}\n\nexport type ExtensionUtilsType = {\n  getPage: () => Promise<Page>\n}\n\nexport class BaseExtension {\n  protected readonly browser: Browser\n  protected readonly context: BrowserContext\n  protected readonly utils: ExtensionUtilsType\n  protected readonly meta: ExtensionMetaType\n  protected readonly browserName: string\n  protected readonly logger: typeof Signale\n\n  /* === Hooks === === === === === === === === === === === === === === === === === === === === */\n\n  init(options: { extensions: codeceptjsFixtureTypes.extensions }): Promise<void> {}\n  _before(): Promise<void> {}\n  _after(): Promise<void> {}\n\n  /* === API === === === === === === === === === === === === === === === === === === === === */\n\n  enableLogs(): void {}\n  disableLogs(): void {}\n}\n")))}y.isMDXComponent=!0}}]);