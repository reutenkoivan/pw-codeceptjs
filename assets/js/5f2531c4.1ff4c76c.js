"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[748],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,y=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(y,a(a({ref:t},l),{},{components:n})):r.createElement(y,a({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7239:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={title:"@pw-codeceptjs/base-extension",sidebar_label:"Entities"},c=void 0,p={unversionedId:"entities",id:"entities",title:"@pw-codeceptjs/base-extension",description:"BaseExtension",source:"@site/../packages/extensions/base/doc/entities.md",sourceDirName:".",slug:"/entities",permalink:"/pw-codeceptjs/extensions/base/entities",draft:!1,tags:[],version:"current",lastUpdatedBy:"Ivan Reutenko",lastUpdatedAt:1655457915,formattedLastUpdatedAt:"6/17/2022",frontMatter:{title:"@pw-codeceptjs/base-extension",sidebar_label:"Entities"},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/pw-codeceptjs/extensions/base/"}},l={},u=[{value:"BaseExtension",id:"baseextension",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"baseextension"},"BaseExtension"),(0,i.kt)("p",null,"Provide base contract between extension and main playwright fixture."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Browser, BrowserContext, Page } from '@playwright/test'\nimport { Signale } from 'signales'\n\nexport type ExtensionMetaType = {\n  tabID: number\n}\n\nexport type ExtensionUtilsType = {\n  getPage: () => Promise<Page>\n}\n\nexport class BaseExtension {\n  protected readonly browser: Browser\n  protected readonly context: BrowserContext\n  protected readonly utils: ExtensionUtilsType\n  protected readonly meta: ExtensionMetaType\n  protected readonly browserName: string\n  protected readonly logger: typeof Signale\n\n  /* === Hooks === === === === === === === === === === === === === === === === === === === === */\n\n  init(options: { extensions: codeceptjsFixtureTypes.extensions }): Promise<void> {}\n  _before(): Promise<void> {}\n  _after(): Promise<void> {}\n\n  /* === API === === === === === === === === === === === === === === === === === === === === */\n\n  enableLogs(): void {}\n  disableLogs(): void {}\n}\n")))}f.isMDXComponent=!0}}]);